apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ci-pipeline
  namespace: dapo-reference-pipeline
spec:
  params:
  - description: git url to clone
    name: git-source-url
    type: string
  - default: master
    description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
    name: git-source-revision
    type: string
  - name: LOCAL_SCAN_PATH
    description:  image path
    default: ./
  - name: LOCAL_IMAGE_SCAN_PATH
    description:  image path
    default: ./
  - name: REMOTE_IMAGE_URL
    description: image path
    default: image-registry.openshift-image-registry.svc:5000/dapo-reference-pipeline/dapo-app-image
  - name: SEVERITY_LEVELS
    description:  vulnerability severity level
    default: HIGH,CRITICAL
  - name: KUSTOMIZE_GIT_URL
    description: Kustomize git repo for CD
    default: https://github.com/oladapooloyede/tekton-pipeline.git
  - name: KUSTOMIZE_GIT_CONTEXT_DIR
    description: Kustomize git repo context directory for CD
    default: k8s/overlays/dev
  workspaces:
  - name: app-source
  - name: maven-settings
  - name: shared-image-repo
  - name: kustomize-repo

  tasks:
  - name: git-clone 
    params:
    - name: url
      value: $(params.git-source-url)
    - name: revision
      value: $(params.git-source-revision)
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: app-source

  - name: generate-tag
    taskRef:
      kind: Task
      name: generate-tag

  - name: build-and-analyze
    params:
    - name: GOALS
      value:  
        - clean
        - test
        - sonar:sonar
        - '-Dsonar.host.url=http://sonarqube:9000'
        - '-Dsonar.login=128934bb2d1a306ad39990b6badb6028cf1ceb02'
        - package
        - -Dquarkus.native.container-build=true
    taskRef:
      kind: ClusterTask
      name: maven
    runAfter:
        - git-clone
        - generate-tag
    workspaces:
    - name: source
      workspace: app-source
    - name: maven-settings
      workspace: maven-settings

  - name: scan-build-artifact
    taskRef:
      kind: ClusterTask
      name: trivy-scan
    runAfter:
        - build-and-analyze
    params:
      - name: SCAN_TYPE
        value:  filesystem
      - name: SEVERITY_LEVELS
        value:  $(params.SEVERITY_LEVELS)
      - name: SCAN_PATH_OR_IMAGE_URL
        value:  $(params.LOCAL_SCAN_PATH)
    workspaces:
      - name: local-image-repo
        workspace: app-source
  
  - name: build-image
    taskRef:
      name: buildah-build
      kind: Task
    runAfter:
        - build-and-analyze
    params:
      - name: IMAGE
        value: $(params.REMOTE_IMAGE_URL)
    workspaces:
      - name: source
        workspace: app-source
      - name: varlibcontainers
        workspace: shared-image-repo

  - name: scan-local-image
    taskRef:
      kind: ClusterTask
      name: trivy-scan
    runAfter:
        - build-image
    params:
      - name: SCAN_TYPE
        value: filesystem
      - name: SEVERITY_LEVELS
        value: $(params.SEVERITY_LEVELS)
      - name: SCAN_PATH_OR_IMAGE_URL
        value: $(params.LOCAL_IMAGE_SCAN_PATH)
    workspaces:
      - name: local-image-repo
        workspace: shared-image-repo

  - name: push-image
    taskRef:
      name: buildah-push
      kind: Task
    runAfter:
        - build-image
    params:
      - name: IMAGE
        value: $(params.REMOTE_IMAGE_URL)
      - name: IMAGE_TAG
        value: $(tasks.generate-tag.results.image-tag)
    workspaces:
      - name: source
        workspace: app-source
      - name: varlibcontainers
        workspace: shared-image-repo

  - name: update-kustomize-repo
    runAfter:
    - push-image
    taskRef:
      kind: Task
      name: update-kustomize-repo
    params:
    - name: gitRepositoryUrl
      value: $(params.KUSTOMIZE_GIT_URL)
    - name: gitPath
      value: $(params.KUSTOMIZE_GIT_CONTEXT_DIR)
    - name: imageTag
      value: $(tasks.generate-tag.results.image-tag)
    - name: verbose
      value: 'true'
    workspaces:
      - name: repository
        workspace: kustomize-repo
